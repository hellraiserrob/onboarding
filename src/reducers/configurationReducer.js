
const initialState = {
    isError: false,
    services: [{
        id: 1,
        name: 'Account and Card Administration',
        description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ea sequi aliquid hic deleniti, tempore animi ipsa similique omnis suscipit, quibusdam repudiandae, et doloremque non excepturi, nesciunt quos neque qui esse?',
        isGlobal: true,
        settings: [{
            id: 1,
            name: 'Issuing contract type',
            description: 'Type of product selected by the issuer',
            isRequired: true,
            fields: [{
                id: 1,
                label: 'Type',
                type: 'select',
                value: '-1',
                originalValue: '-1',
                isRequired: true,
                options: [{ value: '-1', label: 'Select an option' }, { value: '1', label: 'Credit' }, { value: '2', label: 'Debit' }, { value: '3', label: 'Credit + Debit' }]
            }, {
                id: 2,
                label: 'Logo',
                type: 'file',
                value: '',
                originalValue: '',
                isRequired: true
            }]
        }, {
            id: 2,
            name: 'Issuing contract options',
            description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ea sequi aliquid hic deleniti.',
            isRequired: true,
            fields: [{
                id: 3,
                label: 'Contract number',
                type: 'select',
                value: '-1',
                originalValue: '-1',
                isRequired: true,
                options: [{ value: '-1', label: 'Select an option' }, { value: '1', label: 'Bank' }, { value: '2', label: 'CMS' }],
                help: 'Issuing contract number can either be provided by bank in the application file or generated by CMS when account is created.'
            }, {
                id: 4,
                label: 'Generation method',
                type: 'radio',
                value: '-1',
                originalValue: '-1',
                isRequired: true,
                options: [{ value: '1', label: 'Sequential' }, { value: '2', label: 'Custom' }, { value: '3', label: 'Random' }],
                help: 'Number generation method. By default issuing contract numbers are generated sequentially between the Min and Max numbers if defined.'
            }, {
                id: 5,
                label: 'Contract prefix',
                type: 'text',
                value: '',
                originalValue: '',
                isRequired: true,
                help: 'What prefix is used when issuing contract is created.'
            }, {
                id: 6,
                label: 'Contract number length',
                type: 'number',
                value: '',
                originalValue: '',
                isRequired: true,
                help: 'This is the length of the issuing contract number to be produced.'
            }, {
                id: 7,
                label: 'Minimum',
                type: 'number',
                value: '',
                originalValue: '',
                isRequired: true,
                help: 'What the range will contract number start with, after adding the initial 4 digits specific to the institution'
            }, {
                id: 8,
                label: 'Maximum',
                type: 'number',
                value: '',
                originalValue: '',
                isRequired: true,
                help: 'What the range will contract number end with, after adding the initial 4 digits specific to the institution'
            }]
        }, {
            id: 3,
            name: 'Limits',
            description: 'The default credit limit to be applied to a new account of this product.',
            isRequired: true,
            fields: [{
                id: 9,
                label: 'Default limit',
                type: 'number',
                value: '',
                originalValue: '',
                isRequired: true,
                help: 'The default credit limit to be applied to a new account of this product.'
            }, {
                id: 10,
                label: 'Maximum limit',
                type: 'number',
                value: '',
                originalValue: '',
                isRequired: true,
                help: 'This is the maximum credit limit that can be allowed for the product. The system rejects applications with higher credit limit than what is set here, neither allows operators to set a limit higher than this.'
            }, {
                id: 11,
                label: 'Temporary credit limit',
                type: 'radio',
                value: '-1',
                originalValue: '-1',
                isRequired: true,
                options: [{ value: '1', label: 'Yes' }, { value: '2', label: 'No' }],
                help: 'Option allows a temporary credit limit to be added on account level. After end period the credit limit will turn back to its previous value (be it higher or lower)'
            }]
        }, {
            id: 4,
            name: 'Supplementary card ',
            description: 'Option allows a supplementary card to be added on account level. ',
            isRequired: true,
            fields: [{
                id: 12,
                label: 'Allow',
                type: 'radio',
                value: '-1',
                originalValue: '-1',
                isRequired: true,
                options: [{ value: '1', label: 'Yes' }, { value: '2', label: 'No' }]
            }]
        }]
    }, {
        id: 2,
        name: 'Card Production Preparation',
        description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ea sequi aliquid hic deleniti, tempore animi ipsa similique omnis suscipit, quibusdam repudiandae, et doloremque non excepturi, nesciunt quos neque qui esse?',
        isGlobal: false,
        settings: [{
            id: 5,
            name: 'Customisation',
            description: '',
            isRequired: true,
            fields: []
        }, {
            id: 6,
            name: 'BIN',
            description: '',
            isRequired: true,
            fields: []
        }, {
            id: 7,
            name: 'PAN',
            description: '',
            isRequired: true,
            fields: []
        }, {
            id: 8,
            name: 'Expiry / Renewal',
            description: '',
            isRequired: true,
            fields: []
        }, {
            id: 9,
            name: 'Activation',
            description: '',
            isRequired: true,
            fields: []
        }, {
            id: 10,
            name: 'PIN generation',
            description: '',
            isRequired: true,
            fields: []
        }]
    }, {
        id: 3,
        name: 'Financial Authorisation',
        description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ea sequi aliquid hic deleniti, tempore animi ipsa similique omnis suscipit, quibusdam repudiandae, et doloremque non excepturi, nesciunt quos neque qui esse?',
        isGlobal: false,
        settings: [{
            id: 11,
            name: 'Blocks',
            description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.',
            isRequired: true,
            fields: []
        }, {
            id: 12,
            name: 'Limits',
            description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.',
            isRequired: true,
            fields: []
        }]
    }, {
        id: 4,
        name: 'Transaction Processing Service Description',
        description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ea sequi aliquid hic deleniti, tempore animi ipsa similique omnis suscipit, quibusdam repudiandae, et doloremque non excepturi, nesciunt quos neque qui esse?',
        isGlobal: false,
        settings: [{
            id: 13,
            name: 'General',
            description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.',
            isRequired: true,
            fields: []
        }, {
            id: 14,
            name: 'Rules / limits',
            description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.',
            isRequired: true,
            fields: []
        }]
    }, {
        id: 5,
        name: 'Invoicing and Statement Process',
        description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ea sequi aliquid hic deleniti, tempore animi ipsa similique omnis suscipit, quibusdam repudiandae, et doloremque non excepturi, nesciunt quos neque qui esse?',
        isGlobal: false,
        settings: [{
            id: 1,
            name: 'Billing cycle',
            description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.',
            isRequired: true,
            fields: [{
                id: 20,
                label: 'End Date',
                placeholder: 'DD/MM/YYYY',
                type: 'text',
                value: '',
                originalValue: '',
                isRequired: true,
                help: 'When is the billing cycle closed and statement proces initiated. Billing cycle length is 1 month.'
            }, {
                id: 21,
                label: 'Due Date',
                placeholder: 'DD/MM/YYYY',
                type: 'text',
                value: '',
                originalValue: '',
                isRequired: true,
                help: 'This is the default due date each new account will have. '
            }, {
                id: 22,
                label: 'Due date logic',
                type: 'radio',
                value: '-1',
                originalValue: '-1',
                isRequired: true,
                options: [{ value: '1', label: 'Yes' }, { value: '2', label: 'No' }],
                help: 'This is the default due date each new account will have. '
            }, {
                id: 23,
                label: 'Grace period extension',
                placeholder: 'Enter a value',
                type: 'number',
                value: '',
                originalValue: '',
                isRequired: true,
                help: 'This is the default due date each new account will have. '
            }, {
                id: 24,
                label: 'Threshold for waiving small interest amount',
                placeholder: 'Enter a value',
                type: 'text',
                value: '',
                originalValue: '',
                isRequired: true,
                help: 'Interest calculated below this amount is automatically waived'
            }]
        }, {
            id: 2,
            name: 'Statement',
            description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.',
            isRequired: true,
            fields: [{
                id: 30,
                label: 'Allowed delivery methods',
                type: 'select',
                value: '-1',
                originalValue: '-1',
                isRequired: true,
                options: [{value: '-1', label: 'Select a type'},{value: '1', label: 'Electronic statement'},{value: '2', label: 'No statement'}],
                help: 'Which statement delivery methods are in use'
            },{
                id: 31,
                label: 'Default delivery methods',
                type: 'select',
                value: '-1',
                originalValue: '-1',
                isRequired: true,
                options: [{value: '-1', label: 'Select a type'},{value: '1', label: 'Electronic statement'},{value: '2', label: 'No statement'}],
                help: 'Which statement delivery methods is the default'
            }]
        }, {
            id: 3,
            name: 'Minimum payment',
            description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.',
            isRequired: true,
            fields: [{
                id: 40,
                label: 'Minimum payment flat amount',
                placeholder: 'Enter a value',
                type: 'text',
                value: '',
                originalValue: '',
                isRequired: true,
                help: 'Minimum flat amount for minimum payment'
            },{
                id: 41,
                label: 'Minimum payment %',
                placeholder: 'Enter a value',
                type: 'text',
                value: '',
                originalValue: '',
                isRequired: true,
                help: 'Minimum percentage for minimum payment'
            },{
                id: 42,
                label: 'Minimum amount for re-aging',
                placeholder: 'Enter a value',
                type: 'text',
                value: '',
                originalValue: '',
                isRequired: true,
                help: 'If after Payment processing Past Due bucket amount is less than parameter value – Past Due level is getting better to the previous one – amount from this Past Due bucket is automatically transferred to the previous Past Due bucket (or – to Current Due if initial Past Due bucket was Past Due 01).'
            },{
                id: 43,
                label: 'Minimum due tolerance',
                placeholder: 'Enter a value',
                type: 'text',
                value: '',
                originalValue: '',
                isRequired: true,
                help: 'If the amount the customer is paying is less than the minimum due, but the difference is not more than this tolerance, the customer will not be considered overdue.'
            },{
                id: 44,
                label: 'Minimum payment calculation method',
                placeholder: 'Enter a value',
                type: 'text',
                value: '',
                originalValue: '',
                isRequired: true,
                help: ''
            },{
                id: 45,
                label: 'Memo statement to supplementary card holders',
                placeholder: 'Enter a value',
                type: 'text',
                value: '',
                originalValue: '',
                isRequired: true,
                help: ''
            },{
                id: 46,
                label: 'Over limit detection',
                placeholder: 'Enter a value',
                type: 'text',
                value: '',
                originalValue: '',
                isRequired: true,
                help: 'Percentage by which you can go overlimit, without it being treated as overlimit (aka shadow limit). Overlimit will be invoice in full in end of billing cycle.'
            }]
        }]
    }]
}



// settings: [{
//     id: 1,
//     name: 'Settings #1',
//     description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. ',
//     isRequired: true,
//     fields: [{
//         id: 1,
//         label: 'Image',
//         type: 'file',
//         value: '',
//         originalValue: '',
//         isRequired: true
//     },{
//         id: 2,
//         label: 'Minimum',
//         placeholder: 'Enter a minimum',
//         type: 'number',
//         value: '',
//         originalValue: '',
//         isRequired: true
//     },{
//         id: 3,
//         label: 'Type',
//         type: 'select',
//         value: '-1',
//         originalValue: '-1',
//         isRequired: true,
//         options: [{value: '-1', label: 'Select a type'},{value: '1', label: 'Credit Card'},{value: '2', label: 'Debit Card'}]
//     },{
//         id: 4,
//         label: 'Logic',
//         type: 'radio',
//         value: '-1',
//         originalValue: '-1',
//         isRequired: false,
//         options: [{value: '1', label: 'Yes'},{value: '2', label: 'No'}]
//     }]
// }]


function configurationReducer(state = initialState, action) {


    switch (action.type) {

        case 'SET_FIELD': {

            let { serviceId, settingsId, fieldId, txt } = action.payload;

            return {
                services: state.services.map((service) => {
                    service.settings.map((setting) => {
                        setting.fields.map((field) => {
                            if (service.id === serviceId && setting.id === settingsId && field.id === fieldId) {
                                field.value = txt
                            }
                            return field
                        })
                        return setting
                    })
                    return service
                })
            }

        }

        case 'RESET_FIELDS': {

            let { serviceId, settingsId } = action.payload;

            return {
                services: state.services.map((service) => {
                    service.settings.map((setting) => {
                        setting.fields.map((field) => {
                            if (service.id === serviceId && setting.id === settingsId) {
                                field.value = field.originalValue
                            }
                            return field
                        })
                        return setting
                    })
                    return service
                })
            }

        }



        default: {
            return state;
        }
    }



}

export default configurationReducer;